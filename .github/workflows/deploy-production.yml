# name: Deploy to Production

# on:
#   release:
#     types: [published]
#   workflow_dispatch:

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     environment: production

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Set up Ruby
#       uses: ruby/setup-ruby@v1
#       with:
#         ruby-version: '3.2'
#         bundler-cache: false

#     - name: Install Kamal
#       run: gem install kamal

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v3

#     - name: Login to GitHub Container Registry
#       uses: docker/login-action@v3
#       with:
#         registry: ghcr.io
#         username: ${{ github.actor }}
#         password: ${{ secrets.GITHUB_TOKEN }}

#     - name: Create environment file
#       run: |
#         cat > .env << EOF
#         KAMAL_REGISTRY_PASSWORD=${{ secrets.GITHUB_TOKEN }}
#         DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
#         ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }}
#         API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }}
#         TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }}
#         APP_KEYS=${{ secrets.APP_KEYS }}
#         JWT_SECRET=${{ secrets.JWT_SECRET }}
#         NEXT_PUBLIC_API_URL=https://strapi.pageinteract.com
#         CLIENT_URL=https://pageinteract.com
#         PREVIEW_SECRET=${{ secrets.PREVIEW_SECRET }}
#         IMAGE_HOSTNAME=strapi.pageinteract.com
#         RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}
#         EOF

#     - name: Set up SSH
#       uses: webfactory/ssh-agent@v0.9.0
#       with:
#         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

#     - name: Add server to known hosts
#       run: |
#         ssh-keyscan -H ${{ secrets.PRODUCTION_SERVER_IP }} >> ~/.ssh/known_hosts

#     - name: Deploy to production
#       run: |
#         kamal deploy -d production

#     - name: Health check
#       run: |
#         sleep 30
#         curl -f https://pageinteract.com/blog || exit 1
#         curl -f https://strapi.pageinteract.com/api/articles || exit 1

#     - name: Notify deployment status
#       if: always()
#       run: |
#         if [ ${{ job.status }} == 'success' ]; then
#           echo "✅ Production deployment successful!"
#           echo "Blog: https://pageinteract.com/blog"
#           echo "Admin: https://strapi.pageinteract.com/admin"
#         else
#           echo "❌ Production deployment failed!"
#         fi